@inherits LayoutComponentBase

<MudThemeProvider Theme="Theme" IsDarkMode="true" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
	<MudAppBar Color="Color.Primary" Elevation="1">

		<MudIconButton Icon="@menuIcon" Color="Color.Inherit" Edge="Edge.Start" @onclick="MenuToggle" />

		<MudGrid Spacing="2" Justify="Justify.SpaceBetween">

			<MudItem xs="4" />

			<MudItem xs="4" Class="d-flex justify-center align-center">
				<MudText Typo="Typo.h6">Screensound</MudText>
				<MudImage Src="images/logo.png" Style="max-height: 60px;"/>
			</MudItem>

			<MudItem xs="4" Class="d-flex justify-end align-center">
				<Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
					<NotAuthorized>
						<MudButton Variant="Variant.Filled" Href="login" Color="Color.Dark">Login</MudButton>
					</NotAuthorized>
					<Authorized>
						<MudAvatar>
							<MudIcon Icon="@Icons.Material.Filled.Person" Color="Color.Dark"/>
						</MudAvatar>
						<MudButton Class="ml-4" Variant="Variant.Filled" Href="logout" Color="Color.Dark">Logout</MudButton>
					</Authorized>
				</Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
			</MudItem>

		</MudGrid>
	</MudAppBar>

	<MudDrawer @bind-Open="@IsMenuOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
		<NavMenu />
	</MudDrawer>

	<MudMainContent>
		<MudPaper Class="px-4 pt-2 pb-3 ma-4" Square="true">
			@Body
		</MudPaper>
	</MudMainContent>

</MudLayout>

@code
{
	private bool _isMenuOpen = true;
	private string menuIcon = Icons.Material.Rounded.ArrowBack;

	private bool IsMenuOpen 
	{
		get => _isMenuOpen;
		set
		{
			if(_isMenuOpen != value)
			{
				_isMenuOpen = value;
				UpdateMenuIcon();
			}
		}
	}

	void MenuToggle()
	{
		_isMenuOpen = !_isMenuOpen;
		UpdateMenuIcon();
	}

	void UpdateMenuIcon() => menuIcon = IsMenuOpen ? Icons.Material.Filled.ArrowBack : Icons.Material.Rounded.Menu;

	MudTheme Theme = new MudTheme()
	{
		PaletteLight = new PaletteLight()
		{
			Primary = Colors.Green.Darken1,
			Secondary = Colors.Green.Accent4,
			AppbarBackground = Colors.Green.Darken2,
			TextPrimary = Colors.Gray.Darken4,
			TextSecondary = Colors.Gray.Darken3,
		},
		PaletteDark = new PaletteDark()
		{
			Primary = Colors.Green.Darken1,
			Secondary = Colors.Green.Accent4,
			AppbarBackground = Colors.Green.Darken2,
			TextPrimary = Colors.Gray.Lighten3,
			TextSecondary = Colors.Gray.Lighten2,
		},

		LayoutProperties = new LayoutProperties()
		{
			AppbarHeight = "80px",
			DrawerWidthLeft = "260px",
			DrawerWidthRight = "300px"
		},
	};
}
